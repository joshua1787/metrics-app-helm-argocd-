# Default values for metrics-app.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1 # Start with 1 for predictable counter behavior initially.
                # Change to >1 to observe load balancing behavior with an in-memory counter.

image:
  repository: ghcr.io/cloudraftio/metrics-app
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "1.4"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mounts API credentials for the service account if set to true.
  # Kubernetes defaults to true for SA if not specified, but explicit is good.
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8080 # Service port, exposed internally in the cluster
  targetPort: 8080 # Container port where the application runs (ghcr.io/cloudraftio/metrics-app:1.4 runs on 8080)

ingress:
  enabled: true
  className: "nginx" # NGINX Ingress class for KIND
  annotations:
    # kubernetes.io/ingress.class: nginx # Older annotation, className is preferred
    # nginx.ingress.kubernetes.io/rewrite-target: / # Only if your app needs path rewriting
    # cert-manager.io/cluster-issuer: letsencrypt-prod # Example for cert-manager (not used here)
  hosts:
    - host: localhost # This should work with KIND's default setup pointing to 127.0.0.1
      paths:
        - path: / # Expose the service at the root of the host
          pathType: Prefix # Matches any path starting with /
          backend:
            service:
              # name: metrics-app # Will be templated by {{ include "metrics-app.fullname" . }}
              port:
                number: 8080 # Must match the service.port defined above
  tls: []
  #  - secretName: metrics-app-tls
  #    hosts:
  #      - localhost

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 200m
  #   memory: 256Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10 # Only effective if autoscaling.enabled is true
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# Application specific configuration for the secret
appConfig:
  secretName: "metrics-app-secret" # Name of the Kubernetes Secret object to be created
  secretKey: "PASSWORD"            # Key within the Secret data, e.g., data: { PASSWORD: <base64_value> }
  envVarName: "PASSWORD"           # Name of the environment variable injected into the container
  passwordValue: "MYPASSWORD"      # The actual password value (will be base64 encoded in the Secret)